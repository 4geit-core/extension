.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#
.endtemplate
.
.template 1
.
.macro add_code_build(hook)
. for c.code where hook = my.hook & !defined(code.app)
$(code.?)
. endfor
.
. for c.code where hook = my.hook & defined(code.app) & code.app = app.name
$(code.?)
. endfor
.endmacro
.
.macro global.extension__add_code(context, hook)
. log('extension__add_code is deprecated.', 'DEPRECATED')
. for project.extension as e
.   for e.$(my.context) as c
.     add_code_build(my.hook)
.   endfor
. endfor
.endmacro
.
.macro global.extension__add_code_within_context(context, subcontext, hook)
. log('extension__add_code_within_context is deprecated.', 'DEPRECATED')
. for project.extension as e
.   for e.$(my.subcontext) as c where context = context
.     add_code_build(my.hook)
.   endfor
. endfor
.endmacro
.
.macro add_imports_import
. for c.import as i
.   if defined(i.import_from)
from $(i.import_from:) \
.   endif
.
import $(i.import:)\
.
.   if defined(i.alias)
 as $(i.alias:)\
.   endif

. endfor
.endmacro
.
.macro global.extension__add_imports(context)
. log('extension__add_imports is deprecated.', 'DEPRECATED')
. for project.extension
.   for extension.$(my.context) as c
.     add_imports_import()
.   endfor
. endfor
.endmacro
.
.macro global.extension__add_imports_within_context(context, subcontext)
. log('extension__add_imports_within_context is deprecated.', 'DEPRECATED')
. for project.extension
.   for extension.$(my.subcontext) as c where context = context
.     add_imports_import()
.   endfor
. endfor
.endmacro
.
.endtemplate